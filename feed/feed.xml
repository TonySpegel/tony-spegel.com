<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
	<title>Tony Spegel | Modern Web Playground</title>
	<subtitle>Frontend-Entwicklung für Websites, Shopify-Onlineshops, Web- und Cross Platform-Apps</subtitle>
	
	<link href="https://tony-spegel.com/feed/feed.xml" rel="self"/>
	<link href="https://tony-spegel.com/"/>
	<updated>2021-10-04T00:00:00Z</updated>
	<id>https://tony-spegel.com/</id>
	<author>
		<name>Tony Spegel</name>
		<email>tony.spegel@gmail.com</email>
	</author>
	
	<entry>
		<title>Beschleunigte Navigation mit Link prefetching</title>
		<link href="https://tony-spegel.com/blog/beschleunigte-navigation-mit-addPrefetchLink/"/>
		<updated>2021-10-04T00:00:00Z</updated>
		<id>https://tony-spegel.com/blog/beschleunigte-navigation-mit-addPrefetchLink/</id>
		<content type="html">&lt;p&gt;Prefetching beschreibt einen Prozess, welcher eventuell benötigte Inhalte vorlädt,&lt;br /&gt;
um diese schneller aufrufen zu können. Das kann beispielsweise so aussehen:&lt;br /&gt;
&lt;code&gt;&amp;lt;link rel=&amp;quot;prefetch&amp;quot; href=&amp;quot;/img/catsarecute.jpg&amp;quot; /&amp;gt;&lt;/code&gt;.&lt;br /&gt;
Browser werden diese Ressource dann herunterladen und zwischenspeichern&lt;br /&gt;
(allerdings nur im &lt;a class=&quot;text-link&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; title=&quot;Idle&quot; href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/Link_prefetching_FAQ#how_is_browser_idle_time_determined&quot;&gt;Idle&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;Alle Links einer Seite für das Prefetching hinzuzufügen ist natürlich wenig sinnvoll.&lt;br /&gt;
Um das zu optimieren ist mein Ansatz, Links nur auf eine Interaktion hin zu prefetchen - also beispielsweise&lt;br /&gt;
das Zeigen mit der Maus oder das Fokussieren mit einer Tastatur. Inspiration habe ich mir hierbei&lt;br /&gt;
durch das von Google entwickelte&lt;br /&gt;
geholt. Der entscheidende Unterschied zu meiner Lösung ist, dass Quicklink alle Links im sichtbaren Bereichen vorlädt (wenn der Browser im Idle ist) und nicht durch eine Interaktion.&lt;/p&gt;
&lt;p&gt;Links zu meiner Lösung &lt;em&gt;addPrefetchLink&lt;/em&gt;:&lt;/p&gt;
&lt;section&gt;
&lt;h2 id=&quot;anforderungen&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;https://tony-spegel.com/blog/beschleunigte-navigation-mit-addPrefetchLink/#anforderungen&quot;&gt;Anforderungen&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Links welche ein &lt;code&gt;mailto:&lt;/code&gt; oder &lt;code&gt;tel:&lt;/code&gt; enthalten, sollen nicht prefetched werden&lt;/li&gt;
&lt;li&gt;Ist ein Datensparmodus aktiv oder ist die Verbindung zu langsam, sollen keine Links prefetched werden&lt;/li&gt;
&lt;li&gt;Pro Link darf nur eine Interaktion das Prefetching auslösen&lt;/li&gt;
&lt;/ul&gt;
&lt;/section&gt;
&lt;section&gt;
&lt;h2 id=&quot;die-richtigen-links-selektieren&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;https://tony-spegel.com/blog/beschleunigte-navigation-mit-addPrefetchLink/#die-richtigen-links-selektieren&quot;&gt;Die richtigen Links selektieren&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Da es bei E-Mail Links oder Telefonnummern keinen Sinn ergibt, diese zu prefetchen, sollten diese ignoriert werden.&lt;br /&gt;
Ich nutze dazu einfach einen CSS Selektor welche alle Links selektiert,&lt;br /&gt;
deren href-Attribut nicht mit dem entsprechenden Prefix beginnt:&lt;/p&gt;
&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;document&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;querySelectorAll&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;a:not([href^=&quot;mailto:&quot;]):not([href^=&quot;tel:&quot;])&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;forEach&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;link&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;/* prefetch links */&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Man könnte natürlich auch ein Array erstellen und dieses entsprechend filtern.&lt;/p&gt;
&lt;/section&gt;
&lt;section&gt;
&lt;h2 id=&quot;links-prefetchen&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;https://tony-spegel.com/blog/beschleunigte-navigation-mit-addPrefetchLink/#links-prefetchen&quot;&gt;Links prefetchen&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Als erstes definiere ich eine Funktion welche Links zum &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; hinzufügen soll, als einzigen Parameter ein&lt;br /&gt;
Event erwartet und als Rückgabetyp zunächst &lt;code&gt;void&lt;/code&gt; definiert:&lt;/p&gt;
&lt;pre class=&quot;language-typescript&quot;&gt;&lt;code class=&quot;language-typescript&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; addToHead &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;event&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; Event&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; &lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;/* Code */&lt;/span&gt; &lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;event&lt;/code&gt; nutzt schließlich dessen Property &lt;code&gt;target&lt;/code&gt; als Referenz auf das Objekt (hier ein Link) welches das Event ausgelöst hat.&lt;/p&gt;
&lt;section&gt;
&lt;h3 id=&quot;datensparmodus-und-langsame-verbindungen-beruecksichtigen&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;https://tony-spegel.com/blog/beschleunigte-navigation-mit-addPrefetchLink/#datensparmodus-und-langsame-verbindungen-beruecksichtigen&quot;&gt;Datensparmodus und langsame Verbindungen berücksichtigen&lt;/a&gt;&lt;/h3&gt;
&lt;section&gt;&lt;/section&gt;
Um zu prüfen, ob entweder ein Datensparmodus aktiv oder die Verbindung zu langsam ist reichen diese beiden Bedingungen:
```typescript
const addToHead = (event: Event): void | Error =&gt; { 
  if (navigator.connection) {
    const connection = navigator.connection;
    /**
     * Check if a data saver is running
     */
    if (connection.saveData) {
      return new Error(&#39;Prefetch is not available when using Data Saver&#39;);
    }
    /**
     * Check for slow connections, don&#39;t prefetch on 2g or slower.
     * effectiveType can be: slow-2g, 2g, 3g, or 4g
     */
    if (connection.effectiveType.includes(&#39;2g&#39;)) {
      return new Error(&#39;Prefetch is not available on slow connection&#39;);
    }
  }
}
```
Allerdings besitzt nicht jeder Browser Informationen über dessen Verbindungstyp so dass hier zuerst über `navigator.connection` 
auf das Vorhandensein hin geprüft wird. Die hier geworfenen Fehler werden nicht verwendet oder angezeigt
um nicht unnötig zu stören - es soll vor allem einfach nicht prefetched werden.
&lt;p&gt;TypeScript wirft hier zunächst einen Fehler, da es die beiden Properties &lt;code&gt;saveData&lt;/code&gt; und &lt;code&gt;effectiveType&lt;/code&gt; nicht kennt.&lt;br /&gt;
Um das zu beheben, habe ich das entsprechende Interface&lt;/p&gt;
&lt;pre class=&quot;language-typescript&quot;&gt;&lt;code class=&quot;language-typescript&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;declare&lt;/span&gt; global &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;NetworkInformation&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    saveData&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token builtin&quot;&gt;boolean&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    effectiveType&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;slow-2g&#39;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;2g&#39;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;3g&#39;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;4g&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/section&gt;
&lt;section&gt;
&lt;h3 id=&quot;links-zum-head-hinzufuegen&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;https://tony-spegel.com/blog/beschleunigte-navigation-mit-addPrefetchLink/#links-zum-head-hinzufuegen&quot;&gt;Links zum &amp;lt;head&amp;gt; hinzufügen&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Das eigentliche Prefetching ist unspektakulär. Es wird ein Link-Element erzeugt, dessen &lt;code&gt;href&lt;/code&gt;- auf einen Link&lt;br /&gt;
und das &lt;code&gt;rel&lt;/code&gt;-Attribut auf &lt;code&gt;prefetch&lt;/code&gt; gesetzt und schließlich zum &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; hinzugefügt:&lt;/p&gt;
&lt;pre class=&quot;language-typescript&quot;&gt;&lt;code class=&quot;language-typescript&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; addToHead &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;event&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; Event&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; Error &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;// (...) previous code&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;event&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;target &lt;span class=&quot;token operator&quot;&gt;!==&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; link &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; document&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;createElement&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;link&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;    link&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;href &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;HTMLAnchorElement&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;event&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;target&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;href&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    link&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;rel &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;prefetch&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;    document&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;head&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;appendChild&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;link&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/section&gt;
&lt;/section&gt;
&lt;section&gt;
&lt;h2 id=&quot;eine-interaktion-pro-link&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;https://tony-spegel.com/blog/beschleunigte-navigation-mit-addPrefetchLink/#eine-interaktion-pro-link&quot;&gt;Eine Interaktion pro Link&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Um unnötige Netzwerkanfragen zu vermeiden, soll nur eine Interaktion pro Link das Prefetching auslösen.&lt;br /&gt;
Wurde ein Link beispielsweise mit der Tastatur fokussiert, soll ein Hovern mit der Maus keinen weiteren Vorgang auslösen.&lt;br /&gt;
Ein Event an sich nur ein einziges Mal auslösen ist einfach:&lt;/p&gt;
&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;element&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;click&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; &lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;/* Code */&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;token literal-property property&quot;&gt;once&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Pro Element nur ein einziges Event auszulösen ist etwas komplizierter.&lt;br /&gt;
Vorbereitend wird wieder eine leere Funktion erstellt. Diese erwartet einen Link und ein Array an Events,&lt;br /&gt;
hier vorbelegt mit &lt;code&gt;mouseover&lt;/code&gt; und &lt;code&gt;focus&lt;/code&gt;.&lt;/p&gt;
&lt;pre class=&quot;language-typescript&quot;&gt;&lt;code class=&quot;language-typescript&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; addPrefetchLink &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;br /&gt;  link&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; HTMLAnchorElement&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;  userEvents&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; ReadonlyArray&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;keyof&lt;/span&gt; HTMLElementEventMap&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token string&quot;&gt;&#39;mouseover&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token string&quot;&gt;&#39;focus&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;/* Code */&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Der Rest des Codes wird in zwei Teile unterteilt, einen der EventListener entfernt und das hinzufügen zum&lt;br /&gt;
&lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; übernimmt und einen welcher EventListener hinzufügt.&lt;/p&gt;
&lt;pre class=&quot;language-typescript&quot;&gt;&lt;code class=&quot;language-typescript&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; addPrefetchLink &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;br /&gt;  link&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; HTMLAnchorElement&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;  userEvents&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; ReadonlyArray&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;keyof&lt;/span&gt; HTMLElementEventMap&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token string&quot;&gt;&#39;mouseover&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token string&quot;&gt;&#39;focus&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token function-variable function&quot;&gt;handler&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;event&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; Event&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token comment&quot;&gt;// Remove listeners&lt;/span&gt;&lt;br /&gt;    userEvents&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;forEach&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;userEvent&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt;&lt;br /&gt;      link&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;removeEventListener&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;userEvent&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; handler&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token function&quot;&gt;addToHead&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;event&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;// Register listeners&lt;/span&gt;&lt;br /&gt;  userEvents&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;forEach&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;userEvent&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt;&lt;br /&gt;    link&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;userEvent&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; handler&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Die hier als &lt;code&gt;handler&lt;/code&gt; benannte Funktion entfernt zunächst alle auf einen Link gebundenen Events und fügt dann&lt;br /&gt;
den Link via &lt;code&gt;addToHead&lt;/code&gt; hinzu. Fertig! Wobei da eine Sache noch bleibt: sollte ein Link öfters vorhanden sein,&lt;br /&gt;
wird dieser dennoch ein weiteres mal hinzugefügt. Lösen könnte man das wohl mit einem &lt;code&gt;Set&lt;/code&gt; - das kommt (vielleicht)&lt;br /&gt;
in einem Update.&lt;/p&gt;
&lt;/section&gt;
&lt;section&gt;
&lt;h2 id=&quot;fazit&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;https://tony-spegel.com/blog/beschleunigte-navigation-mit-addPrefetchLink/#fazit&quot;&gt;Fazit&lt;/a&gt;&lt;/h2&gt;
&lt;/section&gt;
</content>
	</entry>
</feed>
